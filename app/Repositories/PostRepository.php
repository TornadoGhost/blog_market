<?php


namespace App\Repositories;


use App\Models\KeyWord;
use App\Models\Post;
use App\Repositories\Interfaces\PostRepositoryInterface;
use Carbon\Carbon;
use Illuminate\Support\Arr;
use Illuminate\Support\Str;

class PostRepository extends CoreRepository implements PostRepositoryInterface
{

    public function getModel()
    {
        return Post::class;
    }

    public function getAll()
    {
        return $this->start()->orderBy('id', 'DESC')->get();
    }
    public function getById($id)
    {
        return parent::getById($id); // TODO: Change the autogenerated stub
    }
    public function create($request){
        $newWords = array();
        foreach ($request->keyWords as $word)
        {
            $word_id = KeyWord::query()->create([
                'word' => $word,
            ]);
            array_push($newWords, $word_id->id);
        }

        $req = $this->start()->create([
            'title' => $request->title,
            'content' => $request->content,
            'category_id' => $request->category_id,
            'user_id' => $request->user_id,
            'description' => $request->description,
            'slug' => Str::slug($request->title, '-'),
        ]);
        $req->tags()->sync($request->input('tags'));
        $req->undercategories()->sync($request->input('undercategories'));
        $req->keyWords()->sync($newWords);

/*        foreach ($request->keyWords as $word){
            KeyWord::query()->create([
                'word' => $word,
                'post_id' => $req->id,
            ]);
        }*/
    }
    public function start()
    {
        return parent::start(); // TODO: Change the autogenerated stub
    }

}
