<?php


namespace App\Repositories;


use App\Models\User;
use App\Notifications\UserApprovedNotification;
use App\Repositories\Interfaces\UserRepositoryInterface;

class UserRepository extends CoreRepository implements UserRepositoryInterface
{

    public function getModel()
    {
        return User::class;
    }

    public function getAuthor($request){
        return $this->start()->where('id', '=', $request->author_id)->get();
    }

    public function getNotBannedUsers(){
        return $this->start()->withoutBanned()->get();
    }

    public function getById($id)
    {
        return parent::getById($id); // TODO: Change the autogenerated stub
    }

    public function getUnApprovedUsers(){
        return $this->start()->where('is_author','=', '0')->get();
    }

    public function userUpdateIfAuthorApproved($request){
        return $this->start()->where('id','=', $request->id)->update([
            'is_author' => true,
        ]);
    }

    public function getUserIdFromRequest($request){
        return $this->start()->where('id','=', $request->id)->get();
    }

    public function userUpdateIfAuthorNotApproved($request){
        return $this->start()->where('id','=', $request->id)->update([
            'declined' => true,
        ]);
    }

}
